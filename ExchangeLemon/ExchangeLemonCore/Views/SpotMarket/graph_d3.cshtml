

<style>
   

    .axisRed line{
    stroke: red;
    }

    .axisRed path{
    stroke: red;
    }

    .axisRed text{
    fill: red;
    }  

    path.ohlc {
        stroke: #fff;
        stroke-width: 1;
    }

    path.ohlc.up {
        stroke: #00AA00;
    }

    path.ohlc.down {
        stroke: #FF0000;
    }
</style>


    <script src="/js/d3.v4.min.js"></script>
    <script src="/js/techan.min.js"></script>
    <script>
        var margin = {
                top: 20,
                right: 20,
                bottom: 30,
                left: 50
            },
            //width = 320 - margin.left - margin.right,
            //height = 167 - margin.top - margin.bottom;
            width = 640 - margin.left - margin.right,
            height = 320 - margin.top - margin.bottom;

        var parseDate = d3.timeParse("%d-%b-%y %I:%M:%S");
        //var parseDate = d3.timeParse("%d-%b-%y");
        //var parseDate = d3.time.format("%d-%b-%y %I:%M:%S").parse,
        //timeFormat = d3.time.format('%Y-%m-%d %I:%M:%S'),
        //valueFormat = d3.format(',.2fs');

        var x = techan.scale.financetime()
            .range([0, width]);

        var y = d3.scaleLinear()
            .range([height, 0]);

        var ohlc = techan.plot.ohlc()
            .xScale(x)
            .yScale(y);

        var xAxis = d3.axisBottom(x);

        var yAxis = d3.axisLeft(y);

        var svg = d3.select("div.test").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        //var svg = d3.select("avg")
        //    .attr("width", width + margin.left + margin.right)
        //    .attr("height", height + margin.top + margin.bottom)
        //    .append("g")
        //    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        let graph_url = "/dev/content";
        graph_url  = "/api/ReportGraphExt/btc_usd"
        d3.csv(graph_url , function (error, data) {
            var accessor = ohlc.accessor();

            data = data.slice(0, 200).map(function (d) {
                return {
                    date: parseDate(d.Date),
                    //date: d.Date,
                    open: +d.Open,
                    high: +d.High,
                    low: +d.Low,
                    close: +d.Close,
                    volume: +d.Volume
                };
            }).sort(function (a, b) {
                return d3.ascending(accessor.d(a), accessor.d(b));
            });

            x.domain(data.map(accessor.d));
            y.domain(techan.scale.plot.ohlc(data, accessor).domain());

            svg.append("g")
                .attr("class", "ohlc");

            svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")");


            svg.append("g")
                .attr("class", "y axis")
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .style("text-anchor", "end")
                .text("Price ($)");

            // Data to display initially
            draw(data.slice(0, data.length - 20));
            // Only want this button to be active if the data has loaded
            
        });

        function draw(data) {
            x.domain(data.map(ohlc.accessor().d));
            y.domain(techan.scale.plot.ohlc(data, ohlc.accessor()).domain());

            svg.selectAll("g.ohlc").datum(data).call(ohlc);
            svg.selectAll("g.x.axis").call(xAxis);
            svg.selectAll("g.y.axis").call(yAxis);
        }
    </script>
